[file]

[backends]
{{{- if isLocal . "cloudbreak" }}}
    [backends.cloudbreak]
        [backends.cloudbreak.servers]
            [backends.cloudbreak.servers.server0]
            url = "{{{ .CloudbreakURL }}}"
{{{- end}}}
{{{- if isLocal . "consumption" }}}
    [backends.consumption]
        [backends.consumption.servers]
            [backends.consumption.servers.server0]
            url = "{{{ .ConsumptionURL }}}"
{{{- end}}}
{{{- if isLocal . "datalake" }}}
    [backends.datalake]
        [backends.datalake.servers]
            [backends.datalake.servers.server0]
            url = "{{{ .DatalakeURL }}}"
{{{- end}}}
{{{- if isLocal . "environment" }}}
    [backends.environment]
        [backends.environment.servers]
            [backends.environment.servers.server0]
            url = "{{{ .EnvironmentURL }}}"
{{{- end}}}
{{{- if isLocal . "periscope" }}}
    [backends.periscope]
        [backends.periscope.servers]
            [backends.periscope.servers.server0]
            url = "{{{ .PeriscopeURL }}}"
{{{- end}}}
{{{- if isLocal . "redbeams" }}}
    [backends.redbeams]
        [backends.redbeams.servers]
            [backends.redbeams.servers.server0]
            url = "{{{ .RedbeamsURL }}}"
{{{- end}}}
{{{- if isLocal . "freeipa" }}}
    [backends.freeipa]
        [backends.freeipa.servers]
            [backends.freeipa.servers.server0]
            url = "{{{ .FreeIpaURL }}}"
{{{- end}}}
{{{- if isLocal . "thunderhead-api" }}}
    [backends.thunderhead-api]
        [backends.thunderhead-api.servers]
            [backends.thunderhead-api.servers.server0]
            url = "{{{ .ThunderheadURL }}}"
{{{- end}}}
{{{- if isLocal . "cluster-proxy" }}}
    [backends.cluster-proxy]
        [backends.cluster-proxy.servers]
            [backends.cluster-proxy.servers.server0]
            url = "{{{ .ClusterProxyURL }}}"
{{{- end}}}
{{{- if isLocal . "environments2-api" }}}
    [backends.environments2-api]
        [backends.environments2-api.servers]
            [backends.environments2-api.servers.server0]
            url = "{{{ .Environments2ApiURL }}}"
{{{- end}}}
{{{- if isLocal . "audit-api" }}}
    [backends.audit-api]
        [backends.audit-api.servers]
            [backends.audit-api.servers.server0]
            url = "{{{ .AuditApiURL }}}"
{{{- end}}}
{{{- if isLocal . "datalake-api" }}}
    [backends.datalake-api]
        [backends.datalake-api.servers]
            [backends.datalake-api.servers.server0]
            url = "{{{ .DatalakeApiURL }}}"
{{{- end}}}
{{{- if isLocal . "distrox-api" }}}
    [backends.distrox-api]
        [backends.distrox-api.servers]
            [backends.distrox-api.servers.server0]
            url = "{{{ .DistroxApiURL }}}"
{{{- end}}}

[frontends]
{{{- if isLocal . "cloudbreak"}}}
    [frontends.cloudbreak-frontend]
    backend = "cloudbreak"
        [frontends.cloudbreak-frontend.routes.frontendrule]
        rule = "PathPrefix:/cb/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "consumption"}}}
    [frontends.consumption-frontend]
    backend = "consumption"
        [frontends.consumption-frontend.routes.frontendrule]
        rule = "PathPrefix:/consumption/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "datalake"}}}
    [frontends.datalake-frontend]
    backend = "datalake"
        [frontends.datalake-frontend.routes.frontendrule]
        rule = "PathPrefix:/dl/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "environment"}}}
    [frontends.environment-frontend]
    backend = "environment"
        [frontends.environment-frontend.routes.frontendrule]
        rule = "PathPrefix:/environmentservice/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "periscope"}}}
    [frontends.periscope-frontend]
    backend = "periscope"
        [frontends.periscope-frontend.routes.frontendrule]
        rule = "PathPrefix:/as/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "redbeams"}}}
    [frontends.redbeams-frontend]
    backend = "redbeams"
        [frontends.redbeams-frontend.routes.frontendrule]
        rule = "PathPrefix:/redbeams/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "freeipa"}}}
    [frontends.freeipa-frontend]
    backend = "freeipa"
        [frontends.freeipa-frontend.routes.frontendrule]
        rule = "PathPrefix:/freeipa/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "thunderhead-api"}}}
    [frontends.thunderhead-api-frontend]
    backend = "thunderhead-api"
        [frontends.thunderhead-api-frontend.routes.frontendrule]
        rule = "PathPrefix:/auth,/oidc,/idp,/thunderhead,/iam"
        priority = 100
{{{- end}}}
{{{- if isLocal . "cluster-proxy"}}}
    [frontends.cluster-proxy-frontend]
    backend = "cluster-proxy"
        [frontends.cluster-proxy-frontend.routes.frontendrule]
        rule = "PathPrefix:/cluster-proxy"
        priority = 100
{{{- end}}}
{{{- if isLocal . "environments2-api"}}}
    [frontends.environments2-api-frontend]
    backend = "environments2-api"
        [frontends.environments2-api-frontend.routes.frontendrule]
        rule = "PathPrefix:/api/v1/environments2/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "datalake-api"}}}
    [frontends.datalake-api-frontend]
    backend = "datalake-api"
        [frontends.datalake-api-frontend.routes.frontendrule]
        rule = "PathPrefix:/api/v1/datalake/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "distrox-api"}}}
    [frontends.distrox-api-frontend]
    backend = "distrox-api"
        [frontends.distrox-api-frontend.routes.frontendrule]
        rule = "PathPrefix:/api/v1/datahub/"
        priority = 100
{{{- end}}}
{{{- if isLocal . "audit-api"}}}
    [frontends.audit-api-frontend]
    backend = "audit-api"
        [frontends.audit-api-frontend.routes.frontendrule]
        rule = "PathPrefix:/api/v1/audit/"
        priority = 100
{{{- end}}}

# Tracing definition
[tracing]
  backend = "jaeger"
  serviceName = "traefik"
  spanNameLimit = 0

  [tracing.jaeger]
    localAgentHostPort = "{{{ .JAEGER_HOST }}}:6831"
    samplingServerURL = "http://{{{ .JAEGER_HOST }}}:5778/sampling"
    samplingType = "const"
    samplingParam = 1.0
    traceContextHeaderName = "uber-trace-id"
    disableAttemptReconnecting = false
