version: '3'
volumes:
    {{{get . "COMMON_DB_VOL"}}}:
networks:
  {{{get . "DOCKER_NETWORK_NAME"}}}:
    driver: bridge
    ipam:
        driver: default
        config:
            - subnet: 172.200.0.0/16
services:
    haveged:
        labels:
        - traefik.enable=false
        privileged: true
        networks:
        - {{{get . "DOCKER_NETWORK_NAME"}}}
        logging:
            options:
                max-size: "10M"
                max-file: "5"
        image: docker-private.infra.cloudera.com/cloudera_thirdparty/haveged/haveged:{{{get . "DOCKER_TAG_HAVEGED"}}}
        deploy:
          resources:
            limits:
              memory: 512M
              cpus: 1.0

    {{{get . "COMMON_DB"}}}:
        labels:
        - traefik.enable=false
        ports:
            - "5432:5432"
        volumes:
            - "{{{get . "COMMON_DB_VOL"}}}:/var/lib/postgresql/data"
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
        networks:
        - {{{get . "DOCKER_NETWORK_NAME"}}}
        logging:
            options:
                max-size: "10M"
                max-file: "5"
        image: postgres:{{{get . "DOCKER_TAG_POSTGRES"}}}
        entrypoint: ["/bin/bash"]
        command: -c 'cd /var/lib/postgresql; touch .ash_history .psql_history; chown -R postgres:postgres /var/lib/postgresql; (/usr/local/bin/docker-entrypoint.sh postgres -c max_connections=300 -c shared_preload_libraries='pg_stat_statements') & PGPID="$$!"; echo "PGPID $$PGPID"; trap "kill $$PGPID; wait $$PGPID" SIGINT SIGTERM; cd /var/lib/postgresql; (tail -f .*history) & wait "$$PGPID"'

    vault:
        labels:
        - traefik.port=8200
        - traefik.frontend.rule=PathPrefixStrip:/vault
        - traefik.backend=vault
        - traefik.frontend.priority=100
        ports:
        - {{{get . "VAULT_BIND_PORT"}}}:8200
        environment:
        - SKIP_SETCAP=true
        volumes:
        - ./{{{get . "VAULT_CONFIG_FILE"}}}:/vault/config/{{{get . "VAULT_CONFIG_FILE"}}}
        networks:
        - {{{get . "DOCKER_NETWORK_NAME"}}}
        image: {{{get . "VAULT_DOCKER_IMAGE"}}}:{{{get . "VAULT_DOCKER_IMAGE_TAG"}}}
        restart: on-failure
        command: server

    jaeger:
        image: docker-private.infra.cloudera.com/cloudera_thirdparty/jaegertracing/all-in-one:1.20
        networks:
            - {{{get . "DOCKER_NETWORK_NAME"}}}
        ports:
            - 5778:5778
            - 6831:6831/udp
            - 14268:14268
            - 16686:16686
        deploy:
          resources:
            limits:
              memory: 1024M
              cpus: 2.0

    uluwatu:
        environment:
            - http_proxy={{{get . "HTTP_PROXY"}}}
            - https_proxy={{{get . "HTTPS_PROXY"}}}
            - ULU_HOST_ADDRESS
            - NODE_TLS_REJECT_UNAUTHORIZED={{{get . "ULU_NODE_TLS_REJECT_UNAUTHORIZED"}}}
            - ULU_HWX_CLOUD_DEFAULT_ARM_VIRTUAL_NETWORK_ID
            - ULU_ADDRESS_RESOLVING_TIMEOUT
            - "ULU_CLOUDBREAK_ADDRESS={{{get . "CLOUDBREAK_URL"}}}"
            - "ULU_AUDIT_ADDRESS={{{get . "AUDIT_API_URL"}}}"
            - "ULU_DATALAKE_ADDRESS={{{get . "DATALAKE_URL"}}}"
            - "ULU_ENVIRONMENT_ADDRESS={{{get . "ENVIRONMENT_URL"}}}"
            - "ULU_PERISCOPE_ADDRESS={{{get . "PERISCOPE_URL"}}}"
            - "ULU_FREEIPA_ADDRESS={{{get . "FREEIPA_URL"}}}"
            - "ULU_REDBEAMS_ADDRESS={{{get . "REDBEAMS_URL"}}}"
            - 'ULU_SESSION_STORE_SECRET={{{getEscaped . "UAA_ULUWATU_SECRET"}}}'
            - JAEGER_ENDPOINT=http://{{{get . "JAEGER_HOST"}}}:14268/api/traces
            - JAEGER_SAMPLER_MANAGER_HOST_PORT=http://{{{get . "JAEGER_HOST"}}}:5778/sampling
            - ULU_SUBSCRIBE_TO_NOTIFICATIONS
            - AWS_INSTANCE_ID
            - AWS_ACCOUNT_ID
            - AWS_AMI_ID
            - AZURE_TENANT_ID
            - AZURE_SUBSCRIPTION_ID
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - CAAS_ENABLED=true
            {{{- if eq (get . "ULU_ENABLE_DB_SESSION_STORE") "true" }}}
            - "POSTGRES_HOST_ADDRESS={{{get . "ULU_DB_HOST"}}}"
            - "POSTGRES_PORT={{{get . "ULU_DB_PORT"}}}"
            - "POSTGRES_USER={{{get . "ULU_DB_ENV_USER"}}}"
            - "POSTGRES_PASS={{{get . "ULU_DB_ENV_PASS"}}}"
            - "POSTGRES_DB={{{get . "ULU_DB_ENV_DB"}}}"
            - "POSTGRES_SCHEMA={{{get . "ULU_DB_ENV_SCHEMA"}}}"
            {{{- end}}}
        labels:
        - traefik.frontend.rule={{{get . "ULUWATU_FRONTEND_RULE"}}}
        - traefik.port=3000
        - traefik.backend=uluwatu-backend
        - traefik.frontend.priority=5
        ports:
            - 3000:3000
        volumes:
            - {{{get . "ULUWATU_VOLUME_HOST"}}}:{{{get . "ULUWATU_VOLUME_CONTAINER"}}}
        networks:
        - {{{get . "DOCKER_NETWORK_NAME"}}}
        logging:
            options:
                max-size: "10M"
                max-file: "5"
        image: {{{get . "DOCKER_IMAGE_CLOUDBREAK_WEB"}}}:{{{get . "DOCKER_TAG_ULUWATU"}}}
        deploy:
          resources:
            limits:
              memory: 1024M
              cpus: 1.0
{{{ block "dps" .}}}{{{end}}}
{{{ block "cadence" .}}}{{{end}}}
{{{ block "cluster-proxy" .}}}{{{end}}}
{{{- block "cloudbreak" .}}}{{{end}}}
{{{- block "datalake" .}}}{{{end}}}
{{{- block "consumption" .}}}{{{end}}}
{{{- block "environment" .}}}{{{end}}}
{{{- block "periscope" .}}}{{{end}}}
{{{- block "redbeams" .}}}{{{end}}}
{{{- block "freeipa" .}}}{{{end}}}
{{{- block "idbmms" .}}}{{{end}}}
{{{- if eq (get . "WORKLOADIAM_ENABLED") "true" }}}
{{{- block "workloadiam" .}}}{{{end}}}
{{{- end}}}
{{{- block "environments2-api" .}}}{{{end}}}
{{{- block "datalake-api" .}}}{{{end}}}
{{{- block "distrox-api" .}}}{{{end}}}
{{{- if eq (get . "RECIPES_API_ENABLED") "true" }}}
{{{- block "recipes-api" .}}}{{{end}}}
{{{- end}}}

{{{- if eq (get . "CB_AUDIT_SERVICE_ENABLED") "true" }}}
{{{- block "audit" .}}}{{{end}}}
{{{- block "audit-api" .}}}{{{end}}}
{{{- end}}}
{{{- if eq (get . "DATALAKE_DR_ENABLED") "true" }}}
{{{ block "datalake-dr" .}}}{{{end}}}
{{{- end}}}
